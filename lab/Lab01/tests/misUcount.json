{"answerDict": {">>> def how_big(x):\n...     if x > 10:\n...         print('huge')\n...     elif x > 5:\n...         return 'big'\n...     elif x > 0:\n...         print('small')\n...     else:\n...         print(\"nothin'\")\n>>> how_big(7)\nLOCKED_ANSWER\n>>> how_big(12)\nLOCKED_ANSWER\n>>> how_big(1)\nLOCKED_ANSWER\n>>> how_big(-1)\nLOCKED_ANSWER\n": ["['big']"], ">>> n = 3\n>>> while n >= 0:\n...     n -= 1\n...     print(n)\nLOCKED_ANSWER\nLOCKED_ANSWER\nLOCKED_ANSWER\nLOCKED_ANSWER\n": ["['True']", "['Fals']", "['False']", "['3']", "['22']", "['2', '1', '0', 'False']", "['-1']"], ">>> True and 13\nLOCKED_ANSWER\n>>> False or 0\nLOCKED_ANSWER\n>>> not 10\nLOCKED_ANSWER\n>>> not None\nLOCKED_ANSWER\n": ["['True']", "['False']"], ">>> def so_big(x):\n...     if x > 10:\n...         print('huge')\n...     if x > 5:\n...         return 'big'\n...     if x > 0:\n...         print('small')\n...     print(\"nothin'\")\n>>> so_big(7)\n'big'\n>>> so_big(12)\nLOCKED_ANSWER\nLOCKED_ANSWER\n>>> so_big(1)\nLOCKED_ANSWER\nLOCKED_ANSWER\n": ["['huge', \"nothin'\"]", "['huge', 'big']", "['huge', '']", "['hugr']", "['huge', 'None']", "[\"nothin'\"]"], ">>> def go(n):\n...     if n % 2 != 0:\n...         print(n / 2)\n...         return\n...     while n > 0:\n...         print(n)\n...         n = n // 2\n>>> go(4)\nLOCKED_ANSWER\nLOCKED_ANSWER\nLOCKED_ANSWER\n>>> go(5)\nLOCKED_ANSWER\n": ["['2']"], ">>> def go(n):\n...     if n % 2 != 0:\n...         print(n / 2)\n...         return\n...     while n > 0:\n...         print(n)\n...         n = n // 2\n>>> go(4)\n4\n2\n1\n>>> go(5)\nLOCKED_ANSWER\n": ["['5/2']", "['print(5/2)']", "['None']"], ">>> def xk(c, d):\n...     if c == 4:\n...         return 6\n...     elif d >= 4:\n...         return 6 + 7 + c\n...     else:\n...         return 25\n>>> xk(10, 10)\nLOCKED_ANSWER\n>>> xk(10, 6)\nLOCKED_ANSWER\n>>> xk(4, 6)\nLOCKED_ANSWER\n>>> xk(0, 0)\nLOCKED_ANSWER\n": ["['33']"], ">>> def xk(c, d):\n...     if c == 4:\n...         return 6\n...     elif d >= 4:\n...         return 6 + 7 + c\n...     else:\n...         return 25\n>>> xk(10, 10)\n23\n>>> xk(10, 6)\n23\n>>> xk(4, 6)\nLOCKED_ANSWER\n>>> xk(0, 0)\nLOCKED_ANSWER\n": ["['17']"], ">>> True and 1 / 0 and False\nError\n>>> True or 1 / 0 or False\nTrue\n>>> True and 0\n0\n>>> False or 1\n1\n>>> 1 and 3 and 6 and 10 and 15\n15\n>>> 0 or False or 2 or 1 / 0\nLOCKED_ANSWER\n": ["['0']"]}, "countData": {"swapandor": 1, "ififisifelse-sloppy": 2, "sloppyifcondition": 4, "sloppyskipline": 1, "prntendsfn-printvsreturn": 3, "strdsntneedquotes-stringsyntax": 5, "orshrtcirfalsey": 1, "sloppyskipprnt-sloppy": 1, "swapandor-or": 1, "ififisifelse": 2, "ififisifelse-ifclause": 2, "andshrtcirtruthy-shortcircuit": 1, "orshrtcirfalsey-shortcircuit": 1, "sloppyifcondition-sloppy": 4, "sloppyskipline-sloppy": 1, "swapandor-and": 1, "boolexprrtnbool": 1, "prntendsfn-printstring": 3, "sloppyskipprnt": 1, "andshrtcirtruthy-and": 1, "andshrtcirtruthy": 1, "negnumnotvalid-negativenumbers": 1, "orshrtcirfalsey-or": 1, "nonzeroisfalsey": 1, "prntendsfn": 3, "boolexprrtnbool-or": 1, "nonzeroisfalsey-booleanfalseyvalues": 1, "boolexprrtnbool-and": 1, "negnumnotvalid": 1, "strdsntneedquotes": 5, "swapandor-shortcircuit": 1}}